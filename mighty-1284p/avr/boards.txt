
##############################################################

avr_developers.name=avr-developers.com pinouts 16MHz using Optiboot
avr_developers.upload.tool=arduino:avrdude
avr_developers.upload.protocol=arduino
avr_developers.upload.maximum_data_size=16384
avr_developers.upload.maximum_size=130048
avr_developers.upload.speed=115200
avr_developers.bootloader.tool=arduino:avrdude
avr_developers.bootloader.low_fuses=0xf7
avr_developers.bootloader.high_fuses=0xde
avr_developers.bootloader.extended_fuses=0xfd
avr_developers.bootloader.file=optiboot/optiboot_atmega1284p.hex
avr_developers.bootloader.unlock_bits=0x3F
avr_developers.bootloader.lock_bits=0x0F
avr_developers.build.mcu=atmega1284p
avr_developers.build.f_cpu=16000000L
avr_developers.build.core=arduino:arduino
avr_developers.build.variant=avr_developers
avr_developers.build.board=1284P_AVR_DEVELOPERS

##############################################################

bobuino.name=Bobuino and Skinny Bob, 16MHz using Optiboot
# Bobuino: http://crossroadsfencing.com/BobuinoRev17/index.html
# Skinny Bob: http:embeddedcoolness.com/shop/rfx-1284p-devdep-board-w-prototyping-area-nrf24l01-headers-kit/

bobuino.upload.tool=arduino:avrdude
bobuino.upload.protocol=arduino
bobuino.upload.maximum_data_size=16384
bobuino.upload.maximum_size=130048
bobuino.upload.speed=115200

bobuino.bootloader.tool=arduino:avrdude
bobuino.bootloader.low_fuses=0xf7
bobuino.bootloader.high_fuses=0xde
bobuino.bootloader.extended_fuses=0xfd
bobuino.bootloader.file=optiboot/optiboot_atmega1284p.hex
bobuino.bootloader.unlock_bits=0x3F
bobuino.bootloader.lock_bits=0x0F

bobuino.build.mcu=atmega1284p
bobuino.build.f_cpu=16000000L
bobuino.build.core=arduino:arduino
bobuino.build.variant=bobuino
bobuino.build.board=1284P_BOBUINO

##############################################################

mighty_opt.name="maniacbug" Mighty 1284p 16MHz using Optiboot
# https://maniacbug.wordpress.com/2011/11/27/arduino-on-atmega1284p-4/

mighty_opt.upload.tool=arduino:avrdude
mighty_opt.upload.protocol=arduino
mighty_opt.upload.maximum_data_size=16384
mighty_opt.upload.maximum_size=130048
mighty_opt.upload.speed=115200

mighty_opt.bootloader.tool=arduino:avrdude
mighty_opt.bootloader.low_fuses=0xf7
mighty_opt.bootloader.high_fuses=0xde
mighty_opt.bootloader.extended_fuses=0xfd
mighty_opt.bootloader.file=optiboot/optiboot_atmega1284p.hex
mighty_opt.bootloader.unlock_bits=0x3F
mighty_opt.bootloader.lock_bits=0x0F

mighty_opt.build.mcu=atmega1284p
mighty_opt.build.f_cpu=16000000L
mighty_opt.build.core=arduino:arduino
mighty_opt.build.variant=standard
mighty_opt.build.board=1284P_STANDARD

##############################################################

#http://github.com/JChristensen/mini1284
mightymini.name=Mighty Mini 1284p @ 16MHz, Optiboot @ 1Mbps
mightymini.upload.tool=arduino:avrdude
mightymini.upload.protocol=arduino
mightymini.upload.maximum_data_size=16384
mightymini.upload.maximum_size=130048
mightymini.upload.speed=1000000
mightymini.bootloader.tool=arduino:avrdude
mightymini.bootloader.low_fuses=0xf7
mightymini.bootloader.high_fuses=0xde
mightymini.bootloader.extended_fuses=0xfd
mightymini.bootloader.file=optiboot/optiboot_mighty1284p_1M.hex
mightymini.bootloader.unlock_bits=0x3F
mightymini.bootloader.lock_bits=0x0F
mightymini.build.mcu=atmega1284p
mightymini.build.f_cpu=16000000L
mightymini.build.core=arduino:arduino
mightymini.build.variant=standard
mightymini.build.board=1284P_STANDARD

##############################################################

mm8.name=Mighty Mini 1284p @ 8MHz
# http://github.com/JChristensen/mini1284

mm8.upload.tool=arduino:avrdude
mm8.upload.protocol=arduino
mm8.upload.maximum_data_size=16384
mm8.upload.maximum_size=130048
mm8.upload.speed=500000

mm8.bootloader.tool=arduino:avrdude
mm8.bootloader.low_fuses=0xe2
mm8.bootloader.high_fuses=0xde
mm8.bootloader.extended_fuses=0xfd
mm8.bootloader.file=optiboot/optiboot_1284p_8MHz_500k.hex
mm8.bootloader.unlock_bits=0x3F
mm8.bootloader.lock_bits=0x0F

mm8.build.mcu=atmega1284p
mm8.build.f_cpu=8000000L
mm8.build.core=arduino:arduino
mm8.build.variant=standard
mm8.build.board=1284P_STANDARD

##############################################################
# JTAG is enabled on SleepingBeauty board since there is a seperate header
# and none of the JTAG pins are mapped to other headers for i/o

sleepingbeauty.name=Sleeping Beauty 16MHz using OptiBoot
# http://www.firebirduino.com/sleeping_beauty/

sleepingbeauty.upload.tool=arduino:avrdude
sleepingbeauty.upload.protocol=arduino
sleepingbeauty.upload.maximum_size=130048
sleepingbeauty.upload.speed=115200

sleepingbeauty.bootloader.tool=arduino:avrdude
sleepingbeauty.bootloader.low_fuses=0xf7
# jtag enabled since SB has a seperate header for it
# jtage is bit 6 of the high fuse.
sleepingbeauty.bootloader.high_fuses=0x9e
sleepingbeauty.bootloader.extended_fuses=0xfd
sleepingbeauty.bootloader.file=optiboot/optiboot_atmega1284p.hex
sleepingbeauty.bootloader.unlock_bits=0x3F
sleepingbeauty.bootloader.lock_bits=0x0F

sleepingbeauty.build.mcu=atmega1284p
sleepingbeauty.build.f_cpu=16000000L
sleepingbeauty.build.core=arduino:arduino
sleepingbeauty.build.variant=sleepingbeauty
sleepingbeauty.build.board=1284P_SLEEPINGBEAUTY

##############################################################
